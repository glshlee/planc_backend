name: Deploy to OCI Instance

on:
  push:
    branches: [ main ]

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - name: Set up JDK 17
        uses: actions/setup-java@v2
        with:
          java-version: '17'
          distribution: 'adopt'

      - name: Build with Gradle
        run: ./gradlew build

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v2
        with:
          context: .
          push: true
          tags: glshlee/planc-backend:${{ github.sha }}

      - name: Deploy to OCI Instance
        env:
          PRIVATE_KEY: ${{ secrets.OCI_SSH_PRIVATE_KEY }}
          HOST: ${{ secrets.OCI_INSTANCE_IP }}
          USER: ${{ secrets.OCI_INSTANCE_USER }}
        run: |
          echo "$PRIVATE_KEY" > private_key && chmod 600 private_key
          ssh -o StrictHostKeyChecking=no -i private_key ${USER}@${HOST} << EOF
            # Pull the latest Docker image
            docker pull glshlee/planc-backend:${{ github.sha }}
          
            # Stop and remove the old container if it exists
            docker stop planc-backend || true
            docker rm planc-backend || true
          
            # Run the new container
            docker run -d --name demo-app \
              -p 8080:8080 \
              -e MONGODB_URI='${{ secrets.MONGODB_URI }}' \
              glshlee/planc-backend:${{ github.sha }}
          EOF

      - name: Cleanup
        if: always()
        run: rm -f private_key